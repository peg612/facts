<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_10164_matt_facts.Utils</api_name>
        <client_callable>false</client_callable>
        <description>Contains different utils for the matt facts application. </description>
        <name>Utils</name>
        <script><![CDATA[var Utils = Class.create();
Utils.prototype = {
	initialize: function() {
	},
	getFact : function(user){
		var tbl = 'x_10164_matt_facts_fact'; //Query from this table
		var returnNum = 5; //Return this number of records in the array
		var factArray = []; //Array of all the facts
		var returnFact = 'No fact found. Please ask the person to add some!'; //The fact to return
		var randomNumber; //The number used to pull a random fact
		
		//Set up the GlideRecord query
		var rec = new GlideRecord(tbl);
		if(user)
			rec.addQuery('user', user);
		rec.query();
		if(rec.hasNext()){
			//Get the number of records queried
			var numRecs = rec.getRowCount();
			//Ensure number of records is not less than number to return
// 			if(numRecs < returnNum){
// 				returnNum = numRecs;
// 			}	
			while(rec.next()){
				factArray.push(rec.description.toString());
			}
			//Get a random number between 0 and 'numRecs'
			randomNumber = Math.floor(Math.random()*numRecs);
			returnFact = factArray[randomNumber];
		}
		return returnFact.toString();
	},
	
	getFactV4 : function(user){
		var tbl = 'x_10164_matt_facts_fact'; //Query from this table
		var returnFact = 'No fact found. Please ask the person to add some!'; //The fact to return
		
		//Set up the GlideRecord query
		var rec = new GlideRecord(tbl);
		if(user)
			rec.addQuery('user', user);
		rec.query();
		if(rec.hasNext()){
			while(rec.next()){
				if(rec.sent != true){
					returnFact = rec.description.toString();
					rec.sent = true;
					rec.update();
					break;
				}
			}
		}
		return returnFact;
	}, 
	
	getFactV5 : function(user){
		var tbl = 'x_10164_matt_facts_fact'; //Query from this table
		var factArray = []; //Array of all the facts
		var returnFact = 'No fact found. Please ask the person to add some!'; //The fact to return
		var randomNumber; //The number used to pull a random fact
		
		//Set up the GlideRecord query
		var rec = new GlideRecord(tbl);
		if(user)
			rec.addQuery('user', user);
		rec.query();
		if(rec.hasNext()){
			while(rec.next()){
				if(rec.sent != true){
					factArray.push({
						sysID : rec.sys_id.toString(),
						description : rec.description.toString()
					});
				}
			}
			var numRecs = factArray.length;
			//Get a random number between 0 and 'numRecs'
			randomNumber = Math.floor(Math.random()*numRecs);
			returnFact = factArray[randomNumber].description.toString();
			this._markFactSent(factArray[randomNumber].sysID.toString());
		}
		return returnFact;
	}, 
	
	getFactV6 : function(user){
		var tbl = 'x_10164_matt_facts_fact'; //Query from this table
		var factArray = []; //Array of all the facts
		var returnFact = 'No fact found. Please ask the person to add some!'; //The fact to return
		var randomNumber; //The number used to pull a random fact
		
		//Set up the GlideRecord query
		var rec = new GlideRecord(tbl);
		if(user)
			rec.addQuery('user', user);
		rec.query();
		if(rec.hasNext()){
			while(rec.next()){
				if(rec.sent != true){
					factArray.push({
						sysID : rec.sys_id.toString(),
						description : rec.description.toString()
					});
				}
			}
			var numRecs = factArray.length;
			//Get a random number between 0 and 'numRecs'
			randomNumber = Math.floor(Math.random()*numRecs);
			returnFact = {
					description : factArray[randomNumber].description.toString(),
					id : factArray[randomNumber].sysID.toString()
				};
			this._markFactSent(factArray[randomNumber].sysID.toString());
		}
		return returnFact;
	}, 
	
	getFactV7 : function(user, tbl){
		var factArray = []; //Array of all the facts
		var returnFact = 'No fact found. Please ask the person to add some!'; //The fact to return
		var randomNumber; //The number used to pull a random fact
		
		//Set up the GlideRecord query
		var rec = new GlideRecord(tbl);
		if(user)
			rec.addQuery('user', user);
		rec.query();
		if(rec.hasNext()){
			while(rec.next()){
				if(rec.sent != true){
					factArray.push({
						sysID : rec.sys_id.toString(),
						description : rec.description.toString()
					});
				}
			}
			var numRecs = factArray.length;
			//Get a random number between 0 and 'numRecs'
			randomNumber = Math.floor(Math.random()*numRecs);
			returnFact = factArray[randomNumber].description.toString();
			this._markFactSentV2(factArray[randomNumber].sysID.toString(), tbl);
		}
		return returnFact;
	}, 
	
	addFact : function(user, fact){
		var gr = new GlideRecord('x_10164_matt_facts_fact');
		gr.initialize();
		var sysID = gr.sys_id.toString();
		gr.user = user;
		gr.description = fact;
		gr.insert();
		return sysID;
	},
	
	addFactV2 : function(user, fact, tbl){
		var gr = new GlideRecord(tbl);
		gr.initialize();
		var sysID = gr.sys_id.toString();
		gr.user = user;
		gr.description = fact;
		gr.insert();
		return sysID;
	},
	_markFactSent : function(sysID){
		var gr = new GlideRecord('x_10164_matt_facts_fact');
		gr.addQuery('sys_id', sysID);
		gr.query();
		gr.next();
		gr.sent = true;
		gr.update();
	},
	_markFactSentV2 : function(sysID, tbl){
		var gr = new GlideRecord(tbl);
		gr.addQuery('sys_id', sysID);
		gr.query();
		gr.next();
		gr.sent = true;
		gr.update();
	},
	
	type: 'Utils'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-05-30 16:42:25</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>cc46dfe90fc73200ca9b8fcce1050e1e</sys_id>
        <sys_mod_count>57</sys_mod_count>
        <sys_name>Utils</sys_name>
        <sys_package display_value="Matt Facts" source="x_10164_matt_facts">f183d7690fc73200ca9b8fcce1050e96</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Matt Facts">f183d7690fc73200ca9b8fcce1050e96</sys_scope>
        <sys_update_name>sys_script_include_cc46dfe90fc73200ca9b8fcce1050e1e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-06-15 14:50:59</sys_updated_on>
    </sys_script_include>
</record_update>
